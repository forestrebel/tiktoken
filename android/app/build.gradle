apply plugin: "com.android.application"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    // Folders to check for source files
    root = file("../")
    // Folders to check for JS files
    entryFile = file("../index.js")
    // Whether to bundle JS and assets in debug mode
    bundleInDebug = false
    // Whether to bundle JS and assets in release mode
    bundleInRelease = true
    // Whether to bundle JS and assets in another build variant (if configured).
    // See http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Build-Variants
    // The configuration property can be in the following formats
    //         'bundleIn${productFlavor}${buildType}'
    //         'bundleIn${buildType}'
    // bundleInFreeDebug = true
    // bundleInPaidRelease = true
    // bundleInBeta = true
}

android {
    ndkVersion rootProject.ext.ndkVersion

    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.tiktoken"
    defaultConfig {
        applicationId "com.tiktoken"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', '../../src/assets']
        }
    }

    // Add video assets copy task
    tasks.whenTaskAdded { task ->
        if (task.name.startsWith('merge') && task.name.endsWith('Assets')) {
            task.dependsOn(copyVideoAssets)
        }
    }
}

// Video assets copy task
task copyVideoAssets(type: Copy) {
    from('../../src/assets/demo') {
        include '*.mp4'
    }
    into 'src/main/assets/videos'
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:react-native:+")  // From node_modules

    debugImplementation("com.facebook.flipper:flipper:${FLIPPER_VERSION}")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:${FLIPPER_VERSION}") {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }

    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${FLIPPER_VERSION}")
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
