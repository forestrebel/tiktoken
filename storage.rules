rules_version = '2';

// Craft rules for a simple but secure video upload system
service firebase.storage {
  match /b/{bucket}/o {
    // Utility functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isValidVideo() {
      return request.resource.contentType == 'video/mp4'
        && request.resource.size <= 100 * 1024 * 1024;  // 100MB max
    }

    function isTestUser() {
      return request.auth != null 
        && request.auth.token.sub.matches('test_.*');
    }

    // Videos collection - public read, authenticated write
    match /videos/{videoId} {
      // Anyone can read
      allow read: if true;
      
      // Test users can write with basic validation
      allow write: if isTestUser() && isValidVideo();
    }

    // Test uploads location - minimal validation for tests
    match /test/{filename} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
  }
} 