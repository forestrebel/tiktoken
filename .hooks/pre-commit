#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

# Function to check for secrets in a file
check_secrets() {
    local file="$1"
    local content="$2"
    local found=0

    # Skip the pre-commit hook itself
    if [ "$file" = ".hooks/pre-commit" ]; then
        return 0
    fi

    # Check for private keys
    if echo "$content" | grep -q "BEGIN.*PRIVATE KEY"; then
        found=1
    fi

    # Check for long base64 strings
    if echo "$content" | grep -q "[A-Za-z0-9+/]\{88\}"; then
        found=1
    fi

    # Check for Firebase credentials
    if echo "$content" | grep -q "firebase.*\.json"; then
        found=1
    fi

    # Check for Firebase config
    if echo "$content" | grep -q "[\"']firebase.*[\"'].*[=:].*[\"'][^\"']*[\"']"; then
        found=1
    fi

    # Check for JWT tokens
    if echo "$content" | grep -q "eyJ[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*\.[A-Za-z0-9_-]*"; then
        found=1
    fi

    # Check for API keys
    if echo "$content" | grep -q "[\"']api[_-]key[\"'].*[=:].*[\"'][^\"']*[\"']"; then
        found=1
    fi

    # Check for secret keys
    if echo "$content" | grep -q "[\"']secret[_-]key[\"'].*[=:].*[\"'][^\"']*[\"']"; then
        found=1
    fi

    # Check for passwords
    if echo "$content" | grep -q "[\"']password[\"'].*[=:].*[\"'][^\"']*[\"']"; then
        found=1
    fi

    if [ $found -eq 1 ]; then
        if [ $FOUND_SECRETS -eq 0 ]; then
            echo -e "\n${RED}ERROR: Potential secrets found in staged changes!${NC}"
            echo -e "${RED}The following files contain patterns that look like secrets:${NC}\n"
        fi
        echo -e "${RED}â†’ $file${NC}"
        FOUND_SECRETS=1
    fi
}

# Get staged files
STAGED_FILES=$(git diff --cached --name-only)

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}No files staged for commit.${NC}"
    exit 0
fi

# Check each staged file
FOUND_SECRETS=0
for file in $STAGED_FILES; do
    # Skip binary files
    if git diff --cached --numstat "$file" | grep -q "^-"; then
        continue
    fi
    
    # Get staged content
    content=$(git diff --cached --no-color "$file")
    
    # Check for secrets
    check_secrets "$file" "$content"
done

if [ $FOUND_SECRETS -eq 1 ]; then
    echo -e "\n${RED}Commit rejected! Please remove any secrets before committing.${NC}"
    echo -e "Common issues:"
    echo "  - API keys or tokens"
    echo "  - Private keys"
    echo "  - Firebase credentials"
    echo "  - JWT tokens"
    echo "  - Passwords"
    echo -e "\nTo fix:"
    echo "1. Remove the secrets from your changes"
    echo "2. Use environment variables instead"
    echo "3. Add sensitive files to .gitignore"
    echo -e "\n${RED}If you're ABSOLUTELY SURE this is a false positive:${NC}"
    echo "git commit --no-verify"
    exit 1
fi

exit 0 