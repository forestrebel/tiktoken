version: '3.8'

services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
        - BUILD_VERSION=${BUILD_VERSION:-latest}
    image: ${DO_REGISTRY}/tiktoken-api:${BUILD_VERSION:-latest}
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - AWS_REGION=${AWS_REGION}
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ai:
    build:
      context: ./ai
      dockerfile: Dockerfile.prod
      args:
        - MODEL_VERSION=${MODEL_VERSION:-latest}
    image: ${DO_REGISTRY}/tiktoken-ai:${BUILD_VERSION:-latest}
    environment:
      - MODEL_PATH=/app/models/production
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - api
      - ai
    deploy:
      replicas: 2
      update_config:
        order: start-first 