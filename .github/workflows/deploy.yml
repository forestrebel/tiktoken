name: Minimal Deploy Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
          
      - name: Run Critical Tests
        run: |
          pipenv run pytest cli/test_critical.py -v
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install CLI
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      
      - name: Deploy Supabase
        run: pipenv run t deploy supabase
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      
      - name: Deploy Core API
        run: pipenv run t deploy do-api
        env:
          DO_API_URL: ${{ secrets.DO_API_URL }}
          DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
      
      - name: Deploy Frontend
        run: pipenv run t deploy vercel
        env:
          VERCEL_URL: ${{ secrets.VERCEL_URL }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      
      - name: Verify Deployments
        run: |
          pipenv run t check supabase
          pipenv run t check do-api
          pipenv run t check vercel
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          DO_API_URL: ${{ secrets.DO_API_URL }}
          DO_API_TOKEN: ${{ secrets.DO_API_TOKEN }}
          VERCEL_URL: ${{ secrets.VERCEL_URL }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} 